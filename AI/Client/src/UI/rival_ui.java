package UI;

import chat.ChatClient;
import Model.DataSocket;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

public class rival_ui extends javax.swing.JFrame {

    Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
    public String[] data_from_server;

    public rival_ui() {
        initComponents();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);

        this.btn_play.setIcon(new ImageIcon(new ImageIcon(getClass().getClassLoader().getResource("image/play.jpg")).getImage().getScaledInstance(200, 200, Image.SCALE_DEFAULT)));
        if (!ChatClient.playing) {
            this.btn_play.setEnabled(true);
        } else {
            this.btn_play.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_play = new javax.swing.JButton();

        setResizable(false);

        btn_play.setEnabled(false);
        btn_play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_playActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(btn_play, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(117, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(btn_play, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_playActionPerformed
        this.initcall("request_call"); // khởi tạo với chế độ yêu cầu
    }//GEN-LAST:event_btn_playActionPerformed

   
    public void initcall(String mode) {
        //request_call
        ChatClient.playing = true;
        ChatClient.inviteUI = new invite_ui();
        //ChatClient.inviteUI.init_audio();
        //ChatClient.inviteUI.init_player();

        int x, y;
        x = this.getLocation().x + this.getWidth();
        y = this.getLocation().y;
        if (x + ChatClient.inviteUI.getWidth() > dim.width) {
            x = this.getLocation().x - ChatClient.inviteUI.getWidth();
        }
        ChatClient.inviteUI.setLocation(x, y);
        ChatClient.inviteUI.setVisible(true);

        DataSocket dtsk = new DataSocket();
        dtsk.action = mode;
        dtsk.accept = true;
        String data[] = new String[4];
        data[0] = String.valueOf(ChatClient.myUserName);
        data[1] = String.valueOf(ChatClient.myRivalUserName);
        data[2] = ChatClient.inviteUI.my_ip;
        data[3] = String.valueOf(ChatClient.inviteUI.my_port);
        dtsk.data = data;
        ObjectOutputStream dout;
        try {
            dout = new ObjectOutputStream(ChatClient.socket.getOutputStream());
            dout.writeObject(dtsk);
        } catch (IOException ex) {
            Logger.getLogger(rival_ui.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (mode.equalsIgnoreCase("respon_call")) {
            try {
                // nếu chấp chận thì khởi tạo phần thu âm
                ChatClient.inviteUI.init_recorder(InetAddress.getByName(this.data_from_server[2]), Integer.valueOf(this.data_from_server[3]));
                ChatClient.inviteUI.lb_status.setText("Đã kết nối");
            } catch (UnknownHostException ex) {
                Logger.getLogger(rival_ui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rival_ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new rival_ui().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btn_play;
    // End of variables declaration//GEN-END:variables
}
